services:
    api:
        container_name: arthveda_api
        image: ceoshikhar/arthveda_api:beta
        logging:
            driver: loki
            options:
                loki-url: "https://${LOKI_USER}:${LOKI_PASSWORD}@loki.thor.ceoshikhar.com/loki/api/v1/push"
                loki-retries: 2
                loki-max-backoff: 800ms
                loki-timeout: 1s
                keep-file: "true"
                mode: "non-blocking"
        build:
            dockerfile: api.dockerfile
            args:
                TARGETOS: ${TARGETOS}
                TARGETARCH: ${TARGETARCH}
        environment:
            ARTHVEDA_API_ENV: production
            ARTHVEDA_API_LOG_LEVEL: ${ARTHVEDA_API_LOG_LEVEL}
            ARTHVEDA_API_LOG_FILE: ./logs/${ARTHVEDA_API_LOG_FILE}
            ARTHVEDA_DB_URL: ${ARTHVEDA_DB_URL}
            ARTHVEDA_S3_URL: ${ARTHVEDA_S3_URL}
            ARTHVEDA_S3_ACCESS_KEY: ${ARTHVEDA_S3_ACCESS_KEY}
            ARTHVEDA_S3_SECRET_KEY: ${ARTHVEDA_S3_SECRET_KEY}
            ARTHVEDA_API_URL: ${ARTHVEDA_API_URL}
            ARTHVEDA_WEB_URL: ${ARTHVEDA_WEB_URL}
            ARTHVEDA_ENABLE_SIGN_UP: ${ARTHVEDA_ENABLE_SIGN_UP}
            ARTHVEDA_ENABLE_SIGN_IN: ${ARTHVEDA_ENABLE_SIGN_IN}
            ARTHVEDA_ENABLE_GOOGLE_OAUTH: ${ARTHVEDA_ENABLE_GOOGLE_OAUTH}
            ARTHVEDA_GOOGLE_REDIRECT_URL: ${ARTHVEDA_GOOGLE_REDIRECT_URL}
            ARTHVEDA_GOOGLE_CLIENT_ID: ${ARTHVEDA_GOOGLE_CLIENT_ID}
            ARTHVEDA_GOOGLE_CLIENT_SECRET: ${ARTHVEDA_GOOGLE_CLIENT_SECRET}
            ARTHVEDA_API_CIPHER_KEY: ${ARTHVEDA_API_CIPHER_KEY}
            ARTHVEDA_PADDLE_API_KEY: ${ARTHVEDA_PADDLE_API_KEY}
            ARTHVEDA_PADDLE_WEBHOOK_SECRET: ${ARTHVEDA_PADDLE_WEBHOOK_SECRET}
            ARTHVEDA_ZERODHA_API_KEY: ${ARTHVEDA_ZERODHA_API_KEY}
            ARTHVEDA_ZERODHA_API_SECRET: ${ARTHVEDA_ZERODHA_API_SECRET}
            ARTHVEDA_BODHVEDA_API_URL: ${ARTHVEDA_BODHVEDA_API_URL}
            ARTHVEDA_BODHVEDA_SERVER_API_KEY: ${ARTHVEDA_BODHVEDA_SERVER_API_KEY}
            TZ: ${TZ}
        ports:
            - 1337:1337
        networks:
            - arthveda_network
            - caddy_net
        volumes:
            - ./volumes/api_logs:/app/logs
        restart: unless-stopped
        depends_on:
            db:
                condition: service_healthy
                restart: true
            s3:
                condition: service_healthy
                restart: true

    s3:
        image: ceoshikhar/minio-2025-04-22@sha256:3f97c5651cb6662b880c787a232b6b34fec8d8922e08d6617b25d241a21164bb
        container_name: arthveda_s3
        ports:
            - "9000:9000" # S3 API
            - "9001:9001" # MinIO Console
        environment:
            MINIO_ROOT_USER: ${ARTHVEDA_MINIO_ROOT_USER}
            MINIO_ROOT_PASSWORD: ${ARTHVEDA_MINIO_ROOT_PASSWORD}
        volumes:
            - ./volumes/s3_data:/data
        networks:
            - arthveda_network
            - caddy_net
        command: server /data --console-address ":9001"

    db:
        container_name: arthveda_db
        image: postgres:17.4-alpine
        environment:
            PGPORT: 42069
            POSTGRES_DB: ${ARTHVEDA_DB_NAME}
            POSTGRES_USER: ${ARTHVEDA_DB_USER}
            POSTGRES_PASSWORD: ${ARTHVEDA_DB_PASSWORD}
        ports:
            - 42069:42069
        networks:
            - arthveda_network
            - caddy_net
        volumes:
            - ./volumes/db_data:/var/lib/postgresql/data
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${ARTHVEDA_DB_USER} -d ${ARTHVEDA_DB_NAME}",
                ]
            interval: 10s
            timeout: 5s
            retries: 5
